//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET
{

public sealed partial class BuffConfig: Bright.Config.BeanBase
{
    public BuffConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Description = _buf.ReadString();
        Icon = _buf.ReadString();
        StatusSlot = _buf.ReadInt();
        EffectId = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Type = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Type.Add(_e0);}}
        Group = _buf.ReadInt();
        Priority = _buf.ReadInt();
        PostInit();
    }

    public static BuffConfig DeserializeBuffConfig(ByteBuf _buf)
    {
        return new BuffConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 状态名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 状态描述
    /// </summary>
    public string Description { get; private set; }
    /// <summary>
    /// 图标路径
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// 显示在状态栏
    /// </summary>
    public int StatusSlot { get; private set; }
    /// <summary>
    /// 游戏特效表现（0表示无）
    /// </summary>
    public int EffectId { get; private set; }
    /// <summary>
    /// 类型（1属性变化2行为禁制3持续掉血4吟唱）
    /// </summary>
    public System.Collections.Generic.List<int> Type { get; private set; }
    /// <summary>
    /// 叠加判别组(同组只取最高优先级)
    /// </summary>
    public int Group { get; private set; }
    /// <summary>
    /// 优先级（数字越小越优先，相同则Id最小优先）
    /// </summary>
    public int Priority { get; private set; }

    public const int __ID__ = -1370631787;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Description:" + Description + ","
        + "Icon:" + Icon + ","
        + "StatusSlot:" + StatusSlot + ","
        + "EffectId:" + EffectId + ","
        + "Type:" + Bright.Common.StringUtil.CollectionToString(Type) + ","
        + "Group:" + Group + ","
        + "Priority:" + Priority + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}