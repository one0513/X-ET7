//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET
{

public sealed partial class SkillConfig: Bright.Config.BeanBase
{
    public SkillConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        DamageTarget = _buf.ReadInt();
        Name = _buf.ReadString();
        Icon = _buf.ReadString();
        DefaultGroup = _buf.ReadString();
        InterruptGroup = _buf.ReadString();
        RareLv = _buf.ReadInt();
        Lv = _buf.ReadInt();
        Description = _buf.ReadString();
        CDTime = _buf.ReadInt();
        Mode = _buf.ReadInt();
        PreviewType = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);PreviewRange = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); PreviewRange.Add(_e0);}}
        PostInit();
    }

    public static SkillConfig DeserializeSkillConfig(ByteBuf _buf)
    {
        return new SkillConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 伤害作用对象(0自身1己方2敌方)
    /// </summary>
    public int DamageTarget { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 图标
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// 默认阶段
    /// </summary>
    public string DefaultGroup { get; private set; }
    /// <summary>
    /// 打断阶段
    /// </summary>
    public string InterruptGroup { get; private set; }
    /// <summary>
    /// 稀有度
    /// </summary>
    public int RareLv { get; private set; }
    /// <summary>
    /// 可用等级
    /// </summary>
    public int Lv { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Description { get; private set; }
    /// <summary>
    /// 冷却时间
    /// </summary>
    public int CDTime { get; private set; }
    /// <summary>
    /// 施法模式（0：距离不够则选最大施法范围ps选目标的则不施法;1:距离不够走到最远距离施法）
    /// </summary>
    public int Mode { get; private set; }
    /// <summary>
    /// 技能预览类型(0大圈选一个目标，1大圈选小圈，2从脚底出发指向型……)
    /// </summary>
    public int PreviewType { get; private set; }
    /// <summary>
    /// 技能预览释放范围（0半径；1半径，小圈半径；2，长度，宽度）
    /// </summary>
    public System.Collections.Generic.List<int> PreviewRange { get; private set; }

    public const int __ID__ = -844226349;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "DamageTarget:" + DamageTarget + ","
        + "Name:" + Name + ","
        + "Icon:" + Icon + ","
        + "DefaultGroup:" + DefaultGroup + ","
        + "InterruptGroup:" + InterruptGroup + ","
        + "RareLv:" + RareLv + ","
        + "Lv:" + Lv + ","
        + "Description:" + Description + ","
        + "CDTime:" + CDTime + ","
        + "Mode:" + Mode + ","
        + "PreviewType:" + PreviewType + ","
        + "PreviewRange:" + Bright.Common.StringUtil.CollectionToString(PreviewRange) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}