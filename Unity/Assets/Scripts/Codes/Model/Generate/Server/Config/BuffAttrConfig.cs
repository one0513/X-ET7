//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET
{

public sealed partial class BuffAttrConfig: Bright.Config.BeanBase
{
    public BuffAttrConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributeType = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); AttributeType.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributePct = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); AttributePct.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributeAdd = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); AttributeAdd.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributeFinalAdd = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); AttributeFinalAdd.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributeFinalPct = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); AttributeFinalPct.Add(_e0);}}
        IsRemove = _buf.ReadInt();
        PostInit();
    }

    public static BuffAttrConfig DeserializeBuffAttrConfig(ByteBuf _buf)
    {
        return new BuffAttrConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 属性修饰
    /// </summary>
    public System.Collections.Generic.List<string> AttributeType { get; private set; }
    /// <summary>
    /// 修饰参数
    /// </summary>
    public System.Collections.Generic.List<int> AttributePct { get; private set; }
    /// <summary>
    /// 修饰参数
    /// </summary>
    public System.Collections.Generic.List<int> AttributeAdd { get; private set; }
    /// <summary>
    /// 修饰参数
    /// </summary>
    public System.Collections.Generic.List<int> AttributeFinalAdd { get; private set; }
    /// <summary>
    /// 修饰参数
    /// </summary>
    public System.Collections.Generic.List<int> AttributeFinalPct { get; private set; }
    /// <summary>
    /// 结束后是否移除属性加成（0:是）
    /// </summary>
    public int IsRemove { get; private set; }

    public const int __ID__ = -271434394;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "AttributeType:" + Bright.Common.StringUtil.CollectionToString(AttributeType) + ","
        + "AttributePct:" + Bright.Common.StringUtil.CollectionToString(AttributePct) + ","
        + "AttributeAdd:" + Bright.Common.StringUtil.CollectionToString(AttributeAdd) + ","
        + "AttributeFinalAdd:" + Bright.Common.StringUtil.CollectionToString(AttributeFinalAdd) + ","
        + "AttributeFinalPct:" + Bright.Common.StringUtil.CollectionToString(AttributeFinalPct) + ","
        + "IsRemove:" + IsRemove + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}